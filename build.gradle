plugins {
    id 'java'
}

group 'com.github.arthurpicht'
version '0.2.5-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

dependencies {
    implementation 'com.github.arthurpicht:utils-core:1.13.0'
    implementation 'com.github.arthurpicht:utils-io:0.0.17'
    implementation 'com.github.arthurpicht:cli:0.1.2-no_log'
    implementation 'com.github.arthurpicht:AP-Configuration:0.1.6'
    implementation 'com.github.arthurpicht:console:0.1.6-no_log'

    implementation group: 'com.diogonunes', name: 'JColor', version: '5.0.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

// damit meta zu native kompiliert werden kann, muss die lib ap/console in der
// no_log version gebunden werden. ap/cli bindet 0.1.2, was hier mit 0.1.4-no_log
// Ã¼berschrieben wird.

test {
    useJUnitPlatform()
}

task extractDependencies(type: Copy, dependsOn: jar) {
    from configurations.runtimeClasspath
    into "$buildDir/dependencies"
}

task fatJar(type: Jar, dependsOn: extractDependencies) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'Main-Class': 'de.arthurpicht.meta.cli.Meta'
        attributes 'Version': project.property("version")
        attributes 'Build' : new Date().format('yyyyMMddHHmmss')
    }
    from {
        file("$buildDir/dependencies").listFiles().collect { zipTree(it) }
    }
    from {
        file("$buildDir/libs").listFiles().collect { zipTree(it) }
    }
    destinationDirectory.set(file("$buildDir/fatjar"))
}